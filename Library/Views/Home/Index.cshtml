@model List<Library.DTO.BooksListDTO>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@{
    var validUser = Library.Helpers.Utility.GetValidUserInfo();
    var validUserCampusId = Library.Helpers.Utility.GetValidUserCampus().CampusID;




    var availableBookRequest = ViewBag.AvailableBookRequest as List<Library.DTO.BookRequestListDTO>;
}
<style>
    .jobs-content {
        min-height: 600px;
        padding-bottom: 25px;
    }



    @@media (min-width: 1280px) {
        .job-list img.comp-logo {
            width: 100px;
            height: 75px;
        }
    }
</style>



<div id="app">
    <div class="container-fluid container-blue-lt">
        @if (availableBookRequest != null)
        {
            foreach (var item in availableBookRequest)
            {
                <spam style="color:red;">The book "@item.BookName" that you requested is now available.</spam>


                <div style="margin-left:10px; margin-top:10px;"><button v-on:click="showedBookRequestBtn(@item.BookRequestID)" type="button" class="btn btn-primary" id="SendNotificationButton">Okey</button></div>

            }
        }
        <div class="row row-padding">
            <div class="col-lg-12 pt-4 mt-2 pt-sm-5">
                <div class="d-none d-sm-block">

                </div>

                <h1 class="f-24 pt-3 pt-sm-4"><strong>Books</strong></h1>





            </div>
        </div>
        <div class="row row-padding">
            <div class="col-lg-12 form-group row w-100 pt-3  pb-5">

                <div class="col-md-3" style="">
                    <input v-model="booksNameFilter" style="border-radius: 999px !important;" type="search" placeholder="Search By Book name" class="form-control form-control-slim r-999" value="">
                </div>

                <div class="col-md-2">
                    <input v-model="authorNameFilter" style="border-radius: 999px !important;" type="search" placeholder="Search By author Name" class="form-control form-control-slim r-999" value="">

                </div>
                <div class="col-md-3">
                    <input v-model="barcodeFilter" style="border-radius: 999px !important;" type="search" placeholder="Search By barcode number" class="form-control form-control-slim r-999" value="">

                </div>
                <div class="col-md-2">
                    <input v-model="summaryFilter" style="border-radius: 999px !important;" type="search" placeholder="Search By book summary" class="form-control form-control-slim r-999" value="">

                </div>
                <div class="col-md-2">
                    <select v-model="campusFilter" class="form-select form-control" style="border-radius: 999px !important;" id="selectedKeyType" aria-label="Default select example">
                        <option value="1">Doğu Kampüsü</option>
                        <option value="2">Batı Kampüsü</option>
                        <option value="3">Kuzey Kampüsü</option>
                        <option value="4">Güney Kampüsü</option>
                    </select>

                </div>
            </div>
        </div>
    </div>
    <!-- End Job Post Form -->
    <!-- Jobs List Start -->
    <div class="container-fluid container-blue-lt jobs-content">
        <div class="row row-padding" id="jobs">
            <div class="row ml-2" style=" margin-bottom: -18px;">
                <div class="col-md-2 p-0 m-0">
                    <p>Book Name</p>
                </div>
                <div class="col-md-2 p-0 m-0">
                    <p>Resource Type</p>
                </div>
                <div class="col-md-2 p-0 m-0">
                    <p>Campus Name</p>
                </div>
                <div class="col-md-2 p-0 m-0">
                    <p>Is Printed</p>
                </div>
                <div class="col-md-2 p-0 m-0">
                    <p>Status</p>
                </div>
            </div>
            <div class="w-100 job-list " v-for="book in books">
                <div class="row no-gutters  card card-noborder flex-row " style="margin-bottom:2px; border-radius: 10px !important;">

                    <div class="col-12">
                        <div class="card-body pr-0">
                            <div class="row no-gutters">
                                <div class=" row flex-grow-1">
                                    <div class="col-md-2">
                                        <h5 class="card-title f-16 ff-pnova-b">{{book.BookName}}</h5>
                                        <p>
                                            {{book.AuthorName}}
                                        </p>
                                    </div>
                                    <div class="col-md-2">
                                        <p class="card-text">
                                            {{book.ResourceTypeName}}
                                            <span class="text-grey-l f-12 pl-3"> </span>
                                        </p>
                                    </div>
                                    <div class="col-md-2">
                                        <p class="card-text">
                                            {{book.CampusName}}
                                            <span class="text-grey-l f-12 pl-3"> </span>
                                        </p>
                                    </div>
                                    <div class="col-md-2">
                                        <p v-if="book.IsPrinted" class="card-text">
                                            Basılı
                                            <span class="text-grey-l f-12 pl-3"> </span>
                                        </p>
                                        <p v-else class="card-text">
                                            online
                                            <span class="text-grey-l f-12 pl-3"> </span>
                                        </p>
                                    </div>
                                    <div class="col-md-2">
                                        <p v-if="book.IsAvailable" class="card-text">
                                            mevcut
                                            <span class="text-grey-l f-12 pl-3"> </span>
                                        </p>
                                        <p v-else class="card-text">
                                            mevcut değil
                                            <span class="text-grey-l f-12 pl-3"> </span>
                                        </p>
                                    </div>

                                    <div class="col-md-2">
                                        <div style="min-width:100px;display:flex;">
                                            <div class="float-right align-self-center mt-2 pt-2">
                                                <div v-if="book.IsAvailable">
                                                    <button href="#" v-on:click="btnEdit(book.BookID)" style="border-radius: 999px !important;" class="btn btn-md btn-primary">Borrow The Book <i class="fas fa-chevron-right fa-xs p-left-10"></i></button>
                                                </div>
                                                <div v-else>
                                                    <button href="#" v-on:click="btnExpiresDate(book.BookID)" style="border-radius: 999px !important;" class="btn btn-md btn-warning ">View Return Date <i class="fas fa-chevron-right fa-xs p-left-10"></i></button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <div class="clearfix"></div>
    </div>



    <div class="modal fade" id="NotificatonModal" role="dialog" tabindex="-1" aria-labelledby="ban_reason_modal_title" aria-hidden="true">

        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    Send Notification
                </div>
                <div class="modal-body col-md-12" id="">

                    <p>Talep oluşturduğunuz </p>
                </div>
                <div class="modal-footer">

                    <button type="button" class="btn btn-success" id="SendNotificationButton">Okey</button>
                </div>
            </div>
        </div>
    </div>



</div>
<div class="modal fade" id="borrowBookModal" aria-labelledby="MessageModal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content r-15">
            <div class="modal-body text-center p-30" id="borrowBookModalBody">
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="MessageModal" @*tabindex="-1"*@ aria-labelledby="login" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content r-15">
            <div class="modal-body text-center p-30" id="MessageContent">

            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<script src="~/Scripts/jquery.validate.js"></script>

<script src="~/Scripts/jquery-3.6.0.slim.js"></script>
<script src="~/Scripts/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery-3.6.0.intellisense.js"></script>
<script src="~/Scripts/bootstrap.esm.min.js"></script>
<script src="~/Scripts/bootstrap.bundle.min.js"></script>
<script src="~/Scripts/bootstrap.bundle.js"></script>
<script src="https://code.jquery.com/jquery-1.9.1.min.js"></script>
<script>
    @*$(document).ready(function () {
        if (@Html.Raw(Json.Encode(availableBookRequest))!= null) {
            console.log("giriij");
            $('#NotificatonModal').modal('show');
        }
    });*@
</script>
<script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
<script>


    window.addEventListener('load', () => {
       new Vue({

            el: '#app',
            data: {

                books:@Html.Raw(Json.Encode(Model)),

                //filter//
                booksNameFilter: '',
                authorNameFilter: '',
                barcodeFilter: '',
                summaryFilter: '',
                campusFilter:@validUserCampusId,
            },

            mounted() {

            },
            watch: {

                booksNameFilter: function (value) {
                    if (this.booksNameFilter.length > 1) {
                        this.authorNameFilter = '';
                        this.barcodeFilter = '';
                        this.summaryFilter = '';
                        this.getFilteredBooks();
                    }
                    if (this.booksNameFilter == '') {
                        this.getFilteredBooks();
                    }

                },
                authorNameFilter: function (value) {
                    if (this.authorNameFilter.length > 1) {
                        this.booksNameFilter='';
                        this.barcodeFilter='';
                        this.summaryFilter = '';
                        this.getFilteredBooks();
                    }
                    if (this.authorNameFilter == '') {
                        this.getFilteredBooks();
                    }
                },
                barcodeFilter: function (value) {
                    if (this.barcodeFilter.length > 1) {
                        this.booksNameFilter = '';
                        this.authorNameFilter = '';
                        this.summaryFilter = '';
                        this.getFilteredBooks();
                    }
                    if (this.barcodeFilter == '') {
                        this.getFilteredBooks();
                    }
                },
                summaryFilter: function (value) {
                    if (this.summaryFilter.length > 1) {
                        this.booksNameFilter = '';
                        this.barcodeFilter = '';
                        this.authorNameFilter = '';
                        this.getFilteredBooks();
                    }
                    if (this.summaryFilter == '') {
                        this.getFilteredBooks();
                    }
                },
                campusFilter: function (value) {
                    this.getFilteredBooks();

                },


            },
            methods: {
                getFilteredBooks() {

                    var model = {
                        BookName: this.booksNameFilter,
                        AuthorName: this.authorNameFilter,
                        Barcode: this.barcodeFilter,
                        Summary: this.summaryFilter,
                        CampusID: this.campusFilter,

                    };
                    var url = new URL(location.origin + '/Home/GetFilteredBooks');
                    fetch(url, {
                        method: 'POST',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(model),
                    }).then((res) => {
                        return res.json()
                    }).then((res) => {
                        this.books = res;
                        if (res.length > 0) {

                        }

                    }).catch((error) => {
                        console.log("error");
                    })
                },
                showedBookRequestBtn(el) {
                    var data = { bookrequestId: el }
                    $.ajax({
                        type: "POST",
                        url: "/Home/BookRequestUpdate",
                        contentType: "application/json",
                        data: JSON.stringify(data),
                        success: function (data) {
                            setTimeout(function () {
                                location.reload();
                            }, 1500)

                        },
                        error: function (response) {
                            console.log("Hata");
                        }
                    });
                },
                btnEdit(el) {
                    console.log(el);
                    var model = {
                        bookId: el,
                    };
                    $.ajax({
                        url: "/Home/_BorrrowBookPage",
                        type: "POST",
                        data: JSON.stringify(model),
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            //console.log("data success: " + data);
                            $("#borrowBookModal #borrowBookModalBody").empty().append(data);
                            $('#borrowBookModal').modal('show');
                        },
                        error: function (response) {
                            console.log("error" + response.responseText);
                        }
                    })
                },
                btnExpiresDate(el) {
                    console.log(el);
                    var model = {
                        bookId: el,
                    };
                    $.ajax({
                        url: "/Home/_ReturnBorrowExpiresDate",
                        type: "POST",
                        data: JSON.stringify(model),
                        contentType: 'application/json; charset=utf-8',
                        success: function (data) {
                            //console.log("data success: " + data);
                            $("#borrowBookModal #borrowBookModalBody").empty().append(data);
                            $('#borrowBookModal').modal('show');
                        },
                        error: function (response) {
                            console.log("error" + response.responseText);
                        }
                    })
                },






            }
        });


    });
    function btnEdit(el) {

    }




</script>







